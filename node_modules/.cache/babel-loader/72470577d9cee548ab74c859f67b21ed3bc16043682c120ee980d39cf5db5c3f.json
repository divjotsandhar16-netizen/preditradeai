{"ast":null,"code":"// sampleData.js\n// Generates mock time series data for demo. Replace with real API later.\nfunction generateSeries(days = 60, start = 500, drift = 0.001) {\n  const out = [];\n  let price = start;\n  for (let i = days - 1; i >= 0; i--) {\n    const noise = (Math.random() - 0.5) * start * 0.015; // ~1.5% noise\n    price = Math.max(1, price * (1 + drift) + noise);\n    const d = new Date();\n    d.setDate(d.getDate() - i);\n    const label = `${d.getDate()}/${d.getMonth() + 1}`;\n    out.push({\n      date: label,\n      price: parseFloat(price.toFixed(2)),\n      volume: Math.floor(10000 + Math.random() * 90000)\n    });\n  }\n  return out;\n}\nexport const SAMPLE_STOCKS = {\n  RELIANCE: generateSeries(90, 2400, 0.0012),\n  TCS: generateSeries(90, 3200, -0.0003),\n  INFY: generateSeries(90, 1500, 0.0008),\n  HDFCBANK: generateSeries(90, 1600, 0.0004),\n  TATASTEEL: generateSeries(90, 140, -0.0005)\n};","map":{"version":3,"names":["generateSeries","days","start","drift","out","price","i","noise","Math","random","max","d","Date","setDate","getDate","label","getMonth","push","date","parseFloat","toFixed","volume","floor","SAMPLE_STOCKS","RELIANCE","TCS","INFY","HDFCBANK","TATASTEEL"],"sources":["/Users/divjotkaursandhar/preditradeai/src/data/sampleData.js"],"sourcesContent":["// sampleData.js\n// Generates mock time series data for demo. Replace with real API later.\nfunction generateSeries(days = 60, start = 500, drift = 0.001) {\n  const out = [];\n  let price = start;\n  for (let i = days - 1; i >= 0; i--) {\n    const noise = (Math.random() - 0.5) * start * 0.015; // ~1.5% noise\n    price = Math.max(1, price * (1 + drift) + noise);\n    const d = new Date();\n    d.setDate(d.getDate() - i);\n    const label = `${d.getDate()}/${d.getMonth() + 1}`;\n    out.push({ date: label, price: parseFloat(price.toFixed(2)), volume: Math.floor(10000 + Math.random() * 90000) });\n  }\n  return out;\n}\n\nexport const SAMPLE_STOCKS = {\n  RELIANCE: generateSeries(90, 2400, 0.0012),\n  TCS: generateSeries(90, 3200, -0.0003),\n  INFY: generateSeries(90, 1500, 0.0008),\n  HDFCBANK: generateSeries(90, 1600, 0.0004),\n  TATASTEEL: generateSeries(90, 140, -0.0005),\n};\n"],"mappings":"AAAA;AACA;AACA,SAASA,cAAcA,CAACC,IAAI,GAAG,EAAE,EAAEC,KAAK,GAAG,GAAG,EAAEC,KAAK,GAAG,KAAK,EAAE;EAC7D,MAAMC,GAAG,GAAG,EAAE;EACd,IAAIC,KAAK,GAAGH,KAAK;EACjB,KAAK,IAAII,CAAC,GAAGL,IAAI,GAAG,CAAC,EAAEK,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAClC,MAAMC,KAAK,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIP,KAAK,GAAG,KAAK,CAAC,CAAC;IACrDG,KAAK,GAAGG,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEL,KAAK,IAAI,CAAC,GAAGF,KAAK,CAAC,GAAGI,KAAK,CAAC;IAChD,MAAMI,CAAC,GAAG,IAAIC,IAAI,CAAC,CAAC;IACpBD,CAAC,CAACE,OAAO,CAACF,CAAC,CAACG,OAAO,CAAC,CAAC,GAAGR,CAAC,CAAC;IAC1B,MAAMS,KAAK,GAAG,GAAGJ,CAAC,CAACG,OAAO,CAAC,CAAC,IAAIH,CAAC,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;IAClDZ,GAAG,CAACa,IAAI,CAAC;MAAEC,IAAI,EAAEH,KAAK;MAAEV,KAAK,EAAEc,UAAU,CAACd,KAAK,CAACe,OAAO,CAAC,CAAC,CAAC,CAAC;MAAEC,MAAM,EAAEb,IAAI,CAACc,KAAK,CAAC,KAAK,GAAGd,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,KAAK;IAAE,CAAC,CAAC;EACnH;EACA,OAAOL,GAAG;AACZ;AAEA,OAAO,MAAMmB,aAAa,GAAG;EAC3BC,QAAQ,EAAExB,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC;EAC1CyB,GAAG,EAAEzB,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC;EACtC0B,IAAI,EAAE1B,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC;EACtC2B,QAAQ,EAAE3B,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC;EAC1C4B,SAAS,EAAE5B,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}