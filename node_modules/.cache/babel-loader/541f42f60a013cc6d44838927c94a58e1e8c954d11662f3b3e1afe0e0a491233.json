{"ast":null,"code":"var _jsxFileName = \"/Users/divjotkaursandhar/preditradeai/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [symbol, setSymbol] = useState(\"RELIANCE.NS\");\n  const [data, setData] = useState([]);\n  const [info, setInfo] = useState(null);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5001/api/live/${symbol}`);\n      const chart = response.data.chart;\n      if (chart && chart.timestamp && chart.indicators) {\n        const timestamps = chart.timestamp;\n        const prices = chart.indicators.quote[0].close;\n        const formatted = timestamps.map((t, i) => ({\n          date: new Date(t * 1000).toLocaleDateString(),\n          price: prices[i]\n        }));\n        setData(formatted);\n        setInfo({\n          current: prices[prices.length - 1],\n          high: Math.max(...prices),\n          low: Math.min(...prices)\n        });\n      }\n    } catch (error) {\n      console.error(\"❌ Error fetching stock data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCCA PrediTradeAI Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: symbol,\n        onChange: e => setSymbol(e.target.value),\n        placeholder: \"Enter Stock Symbol (e.g. TCS.NS)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), info && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCB0 Current: \\u20B9\", info.current.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCC8 High: \\u20B9\", info.high.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCC9 Low: \\u20B9\", info.low.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 800,\n      height: 400,\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        domain: [\"auto\", \"auto\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"price\",\n        stroke: \"#00E676\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7r7otMtgUoIZ/K0I28oEmuXricA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","jsxDEV","_jsxDEV","App","_s","symbol","setSymbol","data","setData","info","setInfo","fetchData","response","get","chart","timestamp","indicators","timestamps","prices","quote","close","formatted","map","t","i","date","Date","toLocaleDateString","price","current","length","high","Math","max","low","min","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","toFixed","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","type","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/divjotkaursandhar/preditradeai/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport \"./App.css\";\n\nfunction App() {\n  const [symbol, setSymbol] = useState(\"RELIANCE.NS\");\n  const [data, setData] = useState([]);\n  const [info, setInfo] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5001/api/live/${symbol}`);\n      const chart = response.data.chart;\n      if (chart && chart.timestamp && chart.indicators) {\n        const timestamps = chart.timestamp;\n        const prices = chart.indicators.quote[0].close;\n        const formatted = timestamps.map((t, i) => ({\n          date: new Date(t * 1000).toLocaleDateString(),\n          price: prices[i],\n        }));\n        setData(formatted);\n        setInfo({\n          current: prices[prices.length - 1],\n          high: Math.max(...prices),\n          low: Math.min(...prices),\n        });\n      }\n    } catch (error) {\n      console.error(\"❌ Error fetching stock data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>📊 PrediTradeAI Dashboard</h1>\n      <div className=\"input-section\">\n        <input\n          value={symbol}\n          onChange={(e) => setSymbol(e.target.value)}\n          placeholder=\"Enter Stock Symbol (e.g. TCS.NS)\"\n        />\n        <button onClick={fetchData}>Fetch Data</button>\n      </div>\n\n      {info && (\n        <div className=\"stats\">\n          <p>💰 Current: ₹{info.current.toFixed(2)}</p>\n          <p>📈 High: ₹{info.high.toFixed(2)}</p>\n          <p>📉 Low: ₹{info.low.toFixed(2)}</p>\n        </div>\n      )}\n\n      {data.length > 0 ? (\n        <LineChart\n          width={800}\n          height={400}\n          data={data}\n          margin={{ top: 20, right: 30, left: 20, bottom: 10 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis domain={[\"auto\", \"auto\"]} />\n          <Tooltip />\n          <Line type=\"monotone\" dataKey=\"price\" stroke=\"#00E676\" strokeWidth={2} />\n        </LineChart>\n      ) : (\n        <p>Loading data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}