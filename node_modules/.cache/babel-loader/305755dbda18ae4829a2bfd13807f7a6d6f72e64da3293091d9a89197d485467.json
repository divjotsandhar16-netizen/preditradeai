{"ast":null,"code":"var _jsxFileName = \"/Users/divjotkaursandhar/preditradeai/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchData = useCallback(async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:5001/api/live/RELIANCE.NS\");\n      let fetched = res.data;\n\n      // âœ… Handle if data is wrapped (some APIs return { data: [...] })\n      if (fetched.data && Array.isArray(fetched.data)) {\n        fetched = fetched.data;\n      }\n      if (!Array.isArray(fetched)) {\n        throw new Error(\"Unexpected data format from backend\");\n      }\n      setChartData(fetched);\n      setLoading(false);\n      setError(null);\n    } catch (err) {\n      console.error(\"Fetch error:\", err.message);\n      setError(\"Failed to fetch live data\");\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // auto-refresh every 30s\n    return () => clearInterval(interval);\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCC8 Preditrade AI Live Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Fetching live market data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : chartData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"No live data available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#333\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\",\n            stroke: \"#ccc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#ccc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#00e6b8\",\n            strokeWidth: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"idzTpszyOyg8s4E3xgPEBCaEpt0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","App","_s","chartData","setChartData","loading","setLoading","error","setError","fetchData","res","get","fetched","data","Array","isArray","Error","err","console","message","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","width","height","strokeDasharray","stroke","dataKey","type","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/divjotkaursandhar/preditradeai/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport \"./App.css\";\n\nfunction App() {\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:5001/api/live/RELIANCE.NS\");\n\n      let fetched = res.data;\n\n      // âœ… Handle if data is wrapped (some APIs return { data: [...] })\n      if (fetched.data && Array.isArray(fetched.data)) {\n        fetched = fetched.data;\n      }\n\n      if (!Array.isArray(fetched)) {\n        throw new Error(\"Unexpected data format from backend\");\n      }\n\n      setChartData(fetched);\n      setLoading(false);\n      setError(null);\n    } catch (err) {\n      console.error(\"Fetch error:\", err.message);\n      setError(\"Failed to fetch live data\");\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // auto-refresh every 30s\n    return () => clearInterval(interval);\n  }, [fetchData]);\n\n  return (\n    <div className=\"dashboard\">\n      <h1 className=\"title\">ðŸ“ˆ Preditrade AI Live Trends</h1>\n\n      <div className=\"card\">\n        {loading ? (\n          <p className=\"loading\">Fetching live market data...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : chartData.length === 0 ? (\n          <p className=\"loading\">No live data available yet.</p>\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#333\" />\n              <XAxis dataKey=\"time\" stroke=\"#ccc\" />\n              <YAxis stroke=\"#ccc\" />\n              <Tooltip />\n              <Line type=\"monotone\" dataKey=\"price\" stroke=\"#00e6b8\" strokeWidth={2} />\n            </LineChart>\n          </ResponsiveContainer>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}